tasks:

  - id: users-001
    title: "Extend User Model with Role and Company Support"
    goal: "Add support for user roles and company-based multi-tenancy"
    path:
      backend: "org.traccar.model.User"
    inputs: ["role (enum)", "companyId (foreign key)"]
    outputs: ["User model updated", "company-scoped access enforced"]
    tests:
      - "Super User can assign roles and companies"
      - "Non-super users are scoped by companyId"

  - id: companies-001
    title: "Create Company Management Module"
    goal: "Allow Super Users to manage companies"
    path:
      backend: "org.traccar.model.Company, CompanyResource"
    inputs: ["name", "address", "contactInfo"]
    outputs: ["CRUD endpoints for companies"]
    tests:
      - "Only Super Users can access /api/companies"

  - id: companies-002
    title: "Implement Create/Update Company Profile API"
    goal: "Allow Super User or Admin to create or update a company profile with file upload"
    path:
      backend: "org.traccar.api.resource.CompanyResource, model.Company"
    inputs:
      - "multipart/form-data with fields: logo (file), companyName, registrationNumber, industryId, companySize, businessAddress, phoneNumber, companyEmail, website, timeZone"
    outputs:
      - "POST /api/companies"
      - "PATCH /api/companies/{id}"
    validations:
      - "logo: optional JPG/PNG, max 2MB"
      - "companyEmail: required, must be unique and valid email"
      - "phoneNumber: required, must match standard format"
      - "companyName, businessAddress, industryId, timeZone: required"
    auth:
      - "Only SUPER_USER or ADMIN can access this endpoint"
    tests:
      - "Valid data creates/updates company and stores logo URL"
      - "Invalid email or phone returns 400 with error details"
      - "Unauthenticated user gets 401"
    response_examples:
      success: "201 Created with full company object including logo URL"
      error:
        400:
          errors:
            companyEmail: "This email address is already in use."
            phoneNumber: "Please enter a valid phone number."

  - id: companies-003
    title: "Implement Industries Reference API"
    goal: "Expose industry options for frontend dropdown"
    path:
      backend: "org.traccar.api.resource.IndustryResource"
    inputs: [ ]
    outputs:
      - "GET /api/industries"
    tests:
      - "Returns JSON array of industry objects"

  - id: companies-004
    title: "Implement Company Sizes Reference API"
    goal: "Expose company size ranges for frontend dropdown"
    path:
      backend: "org.traccar.api.resource.CompanySizeResource"
    inputs: [ ]
    outputs:
      - "GET /api/company-sizes"
    tests:
      - "Returns JSON array of string size ranges"

  - id: companies-005
    title: "Implement Timezones Reference API"
    goal: "Expose list of supported IANA time zones"
    path:
      backend: "org.traccar.api.resource.TimeZoneResource"
    inputs: [ ]
    outputs:
      - "GET /api/timezones"
    tests:
      - "Returns array of valid IANA timezones"

  - id: auth-001
    title: "Enhance Login API to Return Role and Company"
    goal: "Expose user's role and companyId after login"
    path:
      backend: "org.traccar.api.resource.SessionResource"
    inputs: ["username", "password"]
    outputs: ["Login returns role and companyId"]
    tests:
      - "Response includes role, companyId for frontend use"

  - id: reports-001
    title: "Implement Stops Report API"
    goal: "Provide backend API to generate stops report per vehicle"
    path:
      backend: "org.traccar.reports.StopsReport"
    inputs: ["vehicleId", "from", "to"]
    outputs: ["/api/reports/stops"]
    tests:
      - "Report returns stop duration, start and end timestamps"
      - "Admin access restricted to their company vehicles"

  - id: reports-002
    title: "Implement Fuel Consumption Report API"
    goal: "Enable fuel usage summaries for vehicles"
    path:
      backend: "org.traccar.reports.FuelReport"
    inputs: ["vehicleId", "from", "to"]
    outputs: ["/api/reports/fuel"]
    tests:
      - "Report calculates fuel used from sensor values"
      - "Only allowed roles can query report"

  - id: drivers-001
    title: "Add Driver Entity and CRUD API"
    goal: "Enable creation and assignment of drivers to vehicles"
    path:
      backend: "org.traccar.model.Driver, DriverResource"
    inputs: ["name", "licenseNo", "phone", "companyId", "assignedVehicleId"]
    outputs: ["/api/drivers (CRUD)"]
    tests:
      - "Driver visible only to Admins in same company"

  - id: drivers-002
    title: "Add Driver Income Tracking and Reports"
    goal: "Record driver earnings and summarize over time"
    path:
      backend: "org.traccar.reports.DriverIncomeReport"
    inputs: ["driverId", "amount", "date", "period"]
    outputs: ["/api/drivers/income", "/api/drivers/income/summary"]
    tests:
      - "Finance/Admin users can add income"
      - "Summary supports daily, weekly, monthly filters"

  - id: finance-001
    title: "Add Driver Payments API"
    goal: "Record driver payments for accountability"
    path:
      backend: "org.traccar.model.DriverPayment, FinanceResource"
    inputs: ["driverId", "amount", "method", "date"]
    outputs: ["POST /api/finance/payments"]
    tests:
      - "Finance users see only their company's records"

  - id: finance-002
    title: "Add Vehicle Expenses Tracking API"
    goal: "Track expenses tied to vehicles"
    path:
      backend: "org.traccar.model.VehicleExpense, FinanceResource"
    inputs: ["vehicleId", "amount", "type", "date", "companyId"]
    outputs: ["POST /api/finance/expenses"]
    tests:
      - "Supports filtering by vehicle and date"

  - id: reminders-001
    title: "Create Reminder and Maintenance API"
    goal: "Support oil changes, servicing, and custom alerts"
    path:
      backend: "org.traccar.model.Reminder, ReminderResource"
    inputs: ["vehicleId", "type", "dueDate", "dueMileage"]
    outputs: ["CRUD endpoints /api/reminders"]
    tests:
      - "Admins can schedule and view reminders"
      - "Upcoming reminders visible via API"

  - id: ev-001
    title: "Add Electric Vehicle Metrics API"
    goal: "Expose EV-specific metrics from position data"
    path:
      backend: "org.traccar.reports.EvMetricsReport"
    inputs: ["vehicleId", "from", "to"]
    outputs: ["GET /api/ev-data"]
    tests:
      - "Returns battery level, motorTemp, RPM, DTCs, I/O"

  - id: ui-001
    title: "Restrict Traccar Default UI to Super User Only"
    goal: "Disable access to default frontend for all roles except Super User"
    path:
      frontend: "web/src/app/app.component.ts"
    inputs: ["role from user context"]
    outputs: ["Redirect unauthorized roles to logout or error page"]
    tests:
      - "Only Super User sees Traccar UI"
